<?php

/**
 * Implements hook_menu().
 */
function devconnect_apiproduct_access_menu() {
  $items['admin/config/devconnect/apiproduct-access'] = array(
    'title' => 'API Product Role Access',
    'description' => 'Settings controlling which roles may access which API Products.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('devconnect_apiproduct_access_admin_form'),
    'access arguments' => array('administer organization settings'),
  );
  return $items;
}

/**
 * Implements hook_apiproduct_list_alter().
 *
 * Checks RBAC access for given API Products.
 */
function devconnect_apiproduct_access_apiproduct_list_alter(array &$api_products, stdClass $account) {
  $user_roles = array_keys($account->roles);

  foreach ($api_products as $id => $product) {
    $product_roles = variable_get('apiproduct_role_' . $product->name, DRUPAL_AUTHENTICATED_RID);
    $product_roles = explode(',', $product_roles);
    $applicable_roles = array_intersect($user_roles, $product_roles);
    if (count($applicable_roles) == 0) {
      unset($api_products[$id]);
    }
  }
}

/**
 * Creates the API Product Role Access admin form.
 *
 * @param $form
 * @param $form_state
 */
function devconnect_apiproduct_access_admin_form($form, &$form_state) {

  $roles = user_roles(TRUE);
  $roles[DRUPAL_AUTHENTICATED_RID] = t('All logged-in developers');
  $api_products = entity_load('api_product');

  foreach ($api_products as $product) {
    $product_roles = variable_get('apiproduct_role_' . $product->name, DRUPAL_AUTHENTICATED_RID);
    $product_roles = explode(',', $product_roles);

    $form['apiproduct_role_' . $product->name] = array(
      '#type' => 'checkboxes',
      '#title' => t('Roles which may access the “@product” product', array('@product' => $product->displayName)),
      '#options' => $roles,
      '#default_value' => $product_roles,
    );
  }

  $form = system_settings_form($form);
  // Clean up arrays before submitting.
  array_unshift($form['#submit'], 'devconnect_apiproduct_access_admin_form_submit');
  return $form;
}

/**
 * Cleans up messy arrays generated by 'checkboxes' element before saving
 * values as a comma-delimited string to the variable table.
 *
 * @param $form
 * @param $form_state
 */
function devconnect_apiproduct_access_admin_form_submit($form, &$form_state) {
  foreach($form_state['values'] as $key => $val) {
    if (substr($key, 0, 16) == 'apiproduct_role_') {
      $product_roles = array();
      foreach($val as $item => $value) {
        if ($value) {
          $product_roles[] = $item;
        }
      }
      $form_state['values'][$key] = join(',', $product_roles);
    }
  }
}
